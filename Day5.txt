Arrow functions

1.Printing odd numbers 

let arr = [1,2,3,4,5,6,7,8,9,10,11,12];
​
let odds = arr. filter(n => n%2);
​
console. log(odds);

2.convert all the strings to title caps in a string array

function titleCase(str) 
{
    return str.split(' ').map((word) => word[0].toUpperCase() + word.slice(1).toLowerCase()).join(' ');
}
console.log(titleCase("welcome to w3schools"));

3.sum of all numbers in an array

let arr = [1,2,3,4,5,6,7,8,9,10,11,12];
let sum = arr.reduce((acc,ele) => acc+ele);
console. log(sum);

4.return all the prime numbers in an array

const Array = [1, 3, 2, 5, 10];
const isPrime = num => {
  for (let i = 2; i < num; i++)
  {
    if (num % i === 0) return false;
  }
  return num !== 1;
};
const myPrimeArray = Array.filter(element => isPrime(element));
console.log(myPrimeArray);

5.return all the palindrome in an array

const arr = ['level', 1344, 12321, 'mam'];
const isPalindrome = el => {
   const str = String(el);
   let i = 0;
   let j = str.length - 1;
   while(i < j) {
      if(str[i] === str[j]) {
         i++;
         j--;
      }
      else {
         return false;
      }
   }
   return true;
};
const findPalindrome = arr => {
   return arr.filter(el => isPalindrome(el));
};
console.log(findPalindrome(arr));

==========================================================================================

Anonymous Function and IIFE function

1.Printing odd numbers 

IIFE:
(()=>{
var arr=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15];
let odd=arr.filter(n1=>n1%2);
console.log(odd);
})();

Anonymous:
var arr=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15];
function oddnum(arr)
{
let odds=arr.filter(n=>n%2);
console.log(odds);
}
oddnum(arr);


2.convert all the strings to title caps in a string array

Named function

function toTitleCase(str) {
  return str.toLowerCase().split(' ').map(function (word) {
    return (word.charAt(0).toUpperCase() + word.slice(1));
  }).join(' ');
}
console.log(toTitleCase("welcome to w3docs"));

IIFE 

(()=>{
var str="welcome to wedocs";
let titlecaps=(str.toLowerCase().split(' ').map(function (word));
console.log(word.charAt(0).toUpperCase() + word.slice(1).join(' '));
})();

3.sum of all numbers in an array

Named Function
var arr = [3, 6, 1, 5, 8];
var add=0;
var sum = function(arr){
return arr[i]+add;
console.log(sum());

IIFE 
(()=>
{
var arr = [3, 6, 1, 5, 8];
var add=0;
var sum = function(arr){
return arr[i]+add;
console.log(sum());
}();

4.return all the prime numbers in an array

Named function
const Array = [1, 3, 2, 5, 10];
const isPrime = function(num) {
  for (let i = 2; i < num; i++)
  {
    if (num % i === 0) return false;
  }
  return num !== 1;
};
const myPrimeArray = Array.filter(element => isPrime(element));
console.log(myPrimeArray);

IIFE

(()=>
{
const Array = [1, 3, 2, 5, 10];
const isPrime = function(num) {
  for (let i = 2; i < num; i++)
  {
    if (num % i === 0) return false;
  }
  return num !== 1;
};
const myPrimeArray = Array.filter(element => isPrime(element));
console.log(myPrimeArray);
}();

5.return all the palindrome in an array

Nmaed Function

const arr = ['level', 1344, 12321, 'mam'];
const isPalindrome = function(el) => {
   const str = String(el);
   let i = 0;
   let j = str.length - 1;
   while(i < j) {
      if(str[i] === str[j]) {
         i++;
         j--;
      }
      else {
         return false;
      }
   }
   return true;
};
const findPalindrome = arr => {
   return arr.filter(el => isPalindrome(el));
};
console.log(findPalindrome(arr));

IIFE

(()=>
{
const arr = ['level', 1344, 12321, 'mam'];
const isPalindrome = function(el) => {
   const str = String(el);
   let i = 0;
   let j = str.length - 1;
   while(i < j) {
      if(str[i] === str[j]) {
         i++;
         j--;
      }
      else {
         return false;
      }
   }
   return true;
};
const findPalindrome = arr => {
   return arr.filter(el => isPalindrome(el));
};
console.log(findPalindrome(arr));
})();

6.find median of two sorted arrays of same size

Named Function

let arr=[1,2,3,4,5];
let arr1=[5,4,3,2,1];
let median=function(arr,arr1)
{
for(int i=0; i<n; i++)
      console.log(arr[i]);

   for(int i=0; i<n; i++)
      console.log(arr2[i]);

return Median = (arr[n-1]+arr1[0])/2;
}
console.log(median(arr1, arr2, n));

IIFE

(()=>
{
let arr=[1,2,3,4,5];
let arr1=[5,4,3,2,1];
let median=function(arr,arr1)
{
for(int i=0; i<n; i++)
      console.log(arr[i]);

   for(int i=0; i<n; i++)
      console.log(arr2[i]);

return Median = (arr[n-1]+arr1[0])/2;
}
console.log(median(arr1, arr2, n));
})();

7.remove duplicates from an array javascript

Named Function

let arr=["mango","orange","mango","apple","orange","pineapple"];
let removeduplicates=function(arr) {
return [...new Set(arr)];
}
console.log(removeDuplicates(arr));

IIFE
(()=>{
let arr=["mango","orange","mango","apple","orange","pineapple"];
let removeduplicates=function(arr) {
return [...new Set(arr)];
}
console.log(removeDuplicates(arr));
})();


8.rotate an array by k times

Named Function
 
nums = [1, 2, 3, 4, 5]

let k = 2;
const rotateArray1 = function(nums, k) {

  for (let i = 0; i < k; i++) {
      nums.unshift(nums.pop());
  }

  return nums;
}
console.log(rotateArray1([1, 2, 3, 4, 5],2));

IIFE

(()=>{
nums = [1, 2, 3, 4, 5]

let k = 2;
const rotateArray1 = function(nums, k) {

  for (let i = 0; i < k; i++) {
      nums.unshift(nums.pop());
  }

  return nums;
}
console.log(rotateArray1([1, 2, 3, 4, 5],2));
})();








